/* tslint:disable */
/* eslint-disable */
/**
 * IPCameras API
 * IPCameras API API
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: nathanfaucett@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Camera
 */
export interface Camera {
    /**
     * 
     * @type {Date}
     * @memberof Camera
     */
    createdAt?: Date;
    /**
     * 
     * @type {boolean}
     * @memberof Camera
     */
    discovered: boolean;
    /**
     * 
     * @type {string}
     * @memberof Camera
     */
    hardwareId: string;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof Camera
     */
    mediaUris: { [key: string]: string; };
    /**
     * 
     * @type {string}
     * @memberof Camera
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof Camera
     */
    record: boolean;
    /**
     * 
     * @type {number}
     * @memberof Camera
     */
    recordWindow?: number;
    /**
     * 
     * @type {boolean}
     * @memberof Camera
     */
    saved: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Camera
     */
    updatedAt: Date;
}

/**
 * Check if a given object implements the Camera interface.
 */
export function instanceOfCamera(value: object): boolean {
    if (!('discovered' in value)) return false;
    if (!('hardwareId' in value)) return false;
    if (!('mediaUris' in value)) return false;
    if (!('name' in value)) return false;
    if (!('record' in value)) return false;
    if (!('saved' in value)) return false;
    if (!('updatedAt' in value)) return false;
    return true;
}

export function CameraFromJSON(json: any): Camera {
    return CameraFromJSONTyped(json, false);
}

export function CameraFromJSONTyped(json: any, ignoreDiscriminator: boolean): Camera {
    if (json == null) {
        return json;
    }
    return {
        
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
        'discovered': json['discovered'],
        'hardwareId': json['hardwareId'],
        'mediaUris': json['mediaUris'],
        'name': json['name'],
        'record': json['record'],
        'recordWindow': json['recordWindow'] == null ? undefined : json['recordWindow'],
        'saved': json['saved'],
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function CameraToJSON(value?: Camera | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'discovered': value['discovered'],
        'hardwareId': value['hardwareId'],
        'mediaUris': value['mediaUris'],
        'name': value['name'],
        'record': value['record'],
        'recordWindow': value['recordWindow'],
        'saved': value['saved'],
        'updatedAt': ((value['updatedAt']).toISOString()),
    };
}

