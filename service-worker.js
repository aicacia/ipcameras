const e=location.pathname.split("/").slice(0,-1).join("/"),r=[e+"/internal/immutable/entry/app.DOc66Ujg.js",e+"/internal/immutable/nodes/0.KMfprv_R.js",e+"/internal/immutable/assets/0.C0TV224Z.css",e+"/internal/immutable/nodes/1._hHp7y5W.js",e+"/internal/immutable/nodes/2.C0gaGTti.js",e+"/internal/immutable/nodes/3.Cs837eHn.js",e+"/internal/immutable/nodes/4.Cm7BlRth.js",e+"/internal/immutable/nodes/5.pJeREN7Y.js",e+"/internal/immutable/nodes/6.CEuq-js5.js",e+"/internal/immutable/nodes/7.I3fA-r8D.js",e+"/internal/immutable/nodes/8.BXpUC3sO.js",e+"/internal/immutable/chunks/Dropdown.DMEfpPwD.js",e+"/internal/immutable/assets/Header.Ckn9IwLX.css",e+"/internal/immutable/chunks/Header.r9quFrr-.js",e+"/internal/immutable/chunks/Icon.CCo9sN5O.js",e+"/internal/immutable/chunks/InputResults.Bx7ANY8g.js",e+"/internal/immutable/chunks/control.CYgJF_JY.js",e+"/internal/immutable/chunks/debounce.BzpYRo3t.js",e+"/internal/immutable/chunks/each.BGHwlt_R.js",e+"/internal/immutable/chunks/entry.9_qOk4_Z.js",e+"/internal/immutable/chunks/httpAccess.TKbybTVh.js",e+"/internal/immutable/chunks/i18n-svelte.DgV7mMaz.js",e+"/internal/immutable/chunks/index.BupekJpF.js",e+"/internal/immutable/chunks/index.Bw_3EgnJ.js",e+"/internal/immutable/chunks/index.CvhbGU4f.js",e+"/internal/immutable/chunks/index.De_1-CT6.js",e+"/internal/immutable/chunks/localstorageWritable.DviM0pTl.js",e+"/internal/immutable/chunks/notifications.CB67zdXi.js",e+"/internal/immutable/chunks/paths.Cz2GhCN0.js",e+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",e+"/internal/immutable/chunks/scheduler.Bu9aYH8f.js",e+"/internal/immutable/entry/start.BvN1XHVy.js",e+"/internal/immutable/chunks/index.DupgR49f.js"],m=[e+"/favicon.png",e+"/icon.png",e+"/icon256x256.png",e+"/manifest.json",e+"/robots.txt"],o="1720779152344",l=self,c=`cache-${o}`,u=[...r,...m];l.addEventListener("install",n=>{async function s(){await(await caches.open(c)).addAll(u)}n.waitUntil(s())});l.addEventListener("activate",n=>{async function s(){for(const t of await caches.keys())t!==c&&await caches.delete(t)}n.waitUntil(s())});l.addEventListener("fetch",n=>{if(n.request.method==="GET"){const s=(async()=>{const t=new URL(n.request.url),a=await caches.open(c);if(u.includes(t.pathname))return a.match(t.pathname);try{const i=await fetch(n.request);return i.status===200&&!n.request.url.startsWith("chrome-extension://")&&a.put(n.request,i.clone()),i}catch{return a.match(n.request)}})();n.respondWith(s)}});
