const n=location.pathname.split("/").slice(0,-1).join("/"),m=[n+"/internal/immutable/entry/app.BSLE246Y.js",n+"/internal/immutable/nodes/0.B5iLcWxP.js",n+"/internal/immutable/assets/0.BMP5Nx9q.css",n+"/internal/immutable/nodes/1.vyGxiWJi.js",n+"/internal/immutable/nodes/2.DBmZPZzL.js",n+"/internal/immutable/nodes/3.Cbh5GK_Z.js",n+"/internal/immutable/nodes/4.B80aT8rb.js",n+"/internal/immutable/nodes/5.Bx9mO4uQ.js",n+"/internal/immutable/nodes/6.R609ZJ7P.js",n+"/internal/immutable/nodes/7.CX5HkNZR.js",n+"/internal/immutable/nodes/8.fX42izJR.js",n+"/internal/immutable/chunks/Dropdown.BF3UryHu.js",n+"/internal/immutable/assets/Header.Ckn9IwLX.css",n+"/internal/immutable/chunks/Header.DrgRzK0Q.js",n+"/internal/immutable/chunks/InputResults.zUOmB-mT.js",n+"/internal/immutable/chunks/control.CYgJF_JY.js",n+"/internal/immutable/chunks/debounce.4TgQRKMW.js",n+"/internal/immutable/chunks/entry.pAbHNRQA.js",n+"/internal/immutable/chunks/httpAccess.oZ7xIxns.js",n+"/internal/immutable/chunks/i18n-svelte.DO6JJ3x7.js",n+"/internal/immutable/chunks/index.C1jzUpoF.js",n+"/internal/immutable/chunks/index.C1nFEm3C.js",n+"/internal/immutable/chunks/index.De_1-CT6.js",n+"/internal/immutable/chunks/index.Dmtj9H_x.js",n+"/internal/immutable/chunks/index.Pahc87b8.js",n+"/internal/immutable/chunks/layout.BsGvsHDX.js",n+"/internal/immutable/chunks/notifications.BuNfmn93.js",n+"/internal/immutable/chunks/paths.DhCfJFuN.js",n+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",n+"/internal/immutable/chunks/scheduler.CgEFyQ-S.js",n+"/internal/immutable/chunks/user.B6Wa3GHb.js",n+"/internal/immutable/entry/start.Cp3CqDyZ.js",n+"/internal/immutable/chunks/index.BJzPQx0s.js"],r=[n+"/favicon.png",n+"/icon.png",n+"/icon256x256.png",n+"/manifest.json",n+"/robots.txt"],o="1721463074619",l=self,u=`cache-${o}`,c=[...m,...r];l.addEventListener("install",e=>{async function s(){await(await caches.open(u)).addAll(c)}e.waitUntil(s())});l.addEventListener("activate",e=>{async function s(){for(const t of await caches.keys())t!==u&&await caches.delete(t)}e.waitUntil(s())});l.addEventListener("fetch",e=>{if(e.request.method==="GET"){const s=(async()=>{const t=new URL(e.request.url),a=await caches.open(u);if(c.includes(t.pathname))return a.match(t.pathname);try{const i=await fetch(e.request);return i.status===200&&!e.request.url.startsWith("chrome-extension://")&&a.put(e.request,i.clone()),i}catch{return a.match(e.request)}})();e.respondWith(s)}});
