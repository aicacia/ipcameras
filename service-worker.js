const n=location.pathname.split("/").slice(0,-1).join("/"),r=[n+"/internal/immutable/entry/app.CFfwx7Z9.js",n+"/internal/immutable/nodes/0.BcbF22_h.js",n+"/internal/immutable/assets/0.DsL-Oas0.css",n+"/internal/immutable/nodes/1.DgyjvlDv.js",n+"/internal/immutable/nodes/2.Dow9VrnO.js",n+"/internal/immutable/nodes/3.D136MVTd.js",n+"/internal/immutable/nodes/4.DcRU3YS-.js",n+"/internal/immutable/nodes/5.CzSlj79R.js",n+"/internal/immutable/nodes/6.BgU-S-j6.js",n+"/internal/immutable/nodes/7.C501puSg.js",n+"/internal/immutable/nodes/8.phfz_HLg.js",n+"/internal/immutable/chunks/Dropdown.CcNYrred.js",n+"/internal/immutable/assets/Header.Ckn9IwLX.css",n+"/internal/immutable/chunks/Header.BuQXDNSt.js",n+"/internal/immutable/chunks/Icon.CkcrXJuI.js",n+"/internal/immutable/chunks/control.CYgJF_JY.js",n+"/internal/immutable/chunks/debounce.BzpYRo3t.js",n+"/internal/immutable/chunks/each.C8Rgkwia.js",n+"/internal/immutable/chunks/entry.ngq7JtPT.js",n+"/internal/immutable/chunks/i18n-svelte.DgV7mMaz.js",n+"/internal/immutable/chunks/index.BOw0JMqb.js",n+"/internal/immutable/chunks/index.BupekJpF.js",n+"/internal/immutable/chunks/index.DHw_VhY_.js",n+"/internal/immutable/chunks/index.De_1-CT6.js",n+"/internal/immutable/chunks/index.QYv70b3f.js",n+"/internal/immutable/chunks/localAccess.CNYJS0uA.js",n+"/internal/immutable/chunks/localstorageWritable.DviM0pTl.js",n+"/internal/immutable/chunks/notifications.CARCvqH5.js",n+"/internal/immutable/chunks/paths.Boo_zllB.js",n+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",n+"/internal/immutable/chunks/scheduler.Bu9aYH8f.js",n+"/internal/immutable/chunks/util.BKKmp01Z.js",n+"/internal/immutable/entry/start.MHBwB0P-.js",n+"/internal/immutable/chunks/index.qs0H3y-J.js"],m=[n+"/favicon.png",n+"/icon.png",n+"/icon256x256.png",n+"/manifest.json",n+"/robots.txt"],o="1720370615515",l=self,c=`cache-${o}`,u=[...r,...m];l.addEventListener("install",e=>{async function a(){await(await caches.open(c)).addAll(u)}e.waitUntil(a())});l.addEventListener("activate",e=>{async function a(){for(const t of await caches.keys())t!==c&&await caches.delete(t)}e.waitUntil(a())});l.addEventListener("fetch",e=>{if(e.request.method==="GET"){const a=(async()=>{const t=new URL(e.request.url),s=await caches.open(c);if(u.includes(t.pathname))return s.match(t.pathname);try{const i=await fetch(e.request);return i.status===200&&!e.request.url.startsWith("chrome-extension://")&&s.put(e.request,i.clone()),i}catch{return s.match(e.request)}})();e.respondWith(a)}});
