const e=location.pathname.split("/").slice(0,-1).join("/"),r=[e+"/internal/immutable/entry/app.CHToLb7R.js",e+"/internal/immutable/nodes/0.BukM5SN1.js",e+"/internal/immutable/assets/0.BMP5Nx9q.css",e+"/internal/immutable/nodes/1.DiTtgZE0.js",e+"/internal/immutable/nodes/2.Cc3cmsPb.js",e+"/internal/immutable/nodes/3.B16JrEFH.js",e+"/internal/immutable/nodes/4.DXxtiabk.js",e+"/internal/immutable/nodes/5.CsfuD5tk.js",e+"/internal/immutable/nodes/6.D6uVO1ek.js",e+"/internal/immutable/nodes/7.D5ePzpZc.js",e+"/internal/immutable/nodes/8.BRpjejVp.js",e+"/internal/immutable/chunks/Dropdown.Tbt_so9D.js",e+"/internal/immutable/assets/Header.Ckn9IwLX.css",e+"/internal/immutable/chunks/Header.BBN_zyc9.js",e+"/internal/immutable/chunks/InputResults.C9hpT5ea.js",e+"/internal/immutable/chunks/control.CYgJF_JY.js",e+"/internal/immutable/chunks/debounce.DpwXS7NU.js",e+"/internal/immutable/chunks/entry.BBsLv14k.js",e+"/internal/immutable/chunks/httpAccess.oZ7xIxns.js",e+"/internal/immutable/chunks/i18n-svelte.DO6JJ3x7.js",e+"/internal/immutable/chunks/index.De_1-CT6.js",e+"/internal/immutable/chunks/index.DfAfitrp.js",e+"/internal/immutable/chunks/index.Dmtj9H_x.js",e+"/internal/immutable/chunks/index.Pahc87b8.js",e+"/internal/immutable/chunks/index.ibyW_jwT.js",e+"/internal/immutable/chunks/layout.dEUG4Mrt.js",e+"/internal/immutable/chunks/notifications.BA952Gbu.js",e+"/internal/immutable/chunks/paths.CHAn_gxj.js",e+"/internal/immutable/chunks/preload-helper.D6kgxu3v.js",e+"/internal/immutable/chunks/scheduler.CgEFyQ-S.js",e+"/internal/immutable/chunks/user.C-3DiQ7a.js",e+"/internal/immutable/entry/start.BiplGVvw.js",e+"/internal/immutable/chunks/index.BJzPQx0s.js"],m=[e+"/favicon.png",e+"/icon.png",e+"/icon256x256.png",e+"/manifest.json",e+"/robots.txt"],o="1721477786498",l=self,c=`cache-${o}`,u=[...r,...m];l.addEventListener("install",n=>{async function s(){await(await caches.open(c)).addAll(u)}n.waitUntil(s())});l.addEventListener("activate",n=>{async function s(){for(const t of await caches.keys())t!==c&&await caches.delete(t)}n.waitUntil(s())});l.addEventListener("fetch",n=>{if(n.request.method==="GET"){const s=(async()=>{const t=new URL(n.request.url),a=await caches.open(c);if(u.includes(t.pathname))return a.match(t.pathname);try{const i=await fetch(n.request);return i.status===200&&!n.request.url.startsWith("chrome-extension://")&&a.put(n.request,i.clone()),i}catch{return a.match(n.request)}})();n.respondWith(s)}});
